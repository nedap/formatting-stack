version: 2.1

commands:
  setup-env:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run: lein with-profile -user,-dev,+ci,+test,+refactor-nrepl deps
      - save_cache:
          paths:
            - ~/.m2
          key: v2-dependencies-{{ checksum "project.clj" }}

executor_defaults: &executor_defaults
  working_directory: ~/repo

executors:
  openjdk8:
    docker:
      - image: circleci/clojure:openjdk-8-lein-2.9.1
    environment:
      LEIN_ROOT: "true"
      JVM_OPTS: -Xmx3200m
    <<: *executor_defaults
  openjdk8-parallel:
    docker:
      - image: circleci/clojure:openjdk-8-lein-2.9.1
    # NOTE: the following is good to shrink to `large` after a couple weeks:
    resource_class: xlarge
    environment:
      LEIN_ROOT: "true"
      JVM_OPTS: -Xmx3200m
    <<: *executor_defaults
  openjdk11:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.1
    environment:
      LEIN_ROOT: "true"
      JVM_OPTS: -Xmx3200m --illegal-access=deny
    <<: *executor_defaults
  openjdk11-parallel:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.1
    # NOTE: the following is good to shrink to `large` after a couple weeks:
    resource_class: xlarge
    environment:
      LEIN_ROOT: "true"
      JVM_OPTS: -Xmx3200m --illegal-access=deny
    <<: *executor_defaults

jobs:
  test_code:
    description: |
      Runs tests against given version of the JDK
    parameters:
      jdk_version:
        description: Version of the JDK to test against
        type: string
      lein_test_command:
        description: A Leiningen command that will run a test suite
        type: string
    executor: << parameters.jdk_version >>
    steps:
      - setup-env
      - run:
          command: << parameters.lein_test_command >>
      - run:
          command: .circleci/e2e.sh
      - run:
          command: lein with-profile -user,+test eastwood
  deploy:
    executor: openjdk8
    steps:
      - setup-env
      - run:
          name: import GPG key
          command: echo -e "$GPG_KEY_V2" | gpg --import
      - run:
          name: Perform pre-release sanity check
          command: lein with-profile -user,-dev,+ci,+ncrw run -m nedap.ci.release-workflow.api sanity-check
      - run:
          name: release to JFrog
          command: lein with-profile -user deploy
      - run:
          name: release to Clojars
          command: lein with-profile -user deploy clojars

test_code_filters: &test_code_filters
  filters:
    branches:
      only: /.*/
    tags:
      only: /^v\d+\.\d+\.\d+(-alpha\d+)?$/

workflows:
  version: 2.1
  ci-test-matrix:
    jobs:
      - test_code:
          name: "JDK 8 including refactor-nrepl"
          jdk_version: openjdk8
          lein_test_command: lein with-profile -user,-dev,+ci,+refactor-nrepl do clean, test
          <<: *test_code_filters
      - test_code:
          name: "JDK 8 excluding refactor-nrepl"
          jdk_version: openjdk8
          lein_test_command: lein with-profile -user,-dev,+ci do clean, test
          <<: *test_code_filters
      - test_code:
          name: "JDK 8, with an old clojurescript dependency on the classpath"
          jdk_version: openjdk8
          lein_test_command: lein with-profile -user,-dev,-provided,+ci,+cljs-old do clean, test
          <<: *test_code_filters
      - test_code:
          name: "JDK 11 including refactor-nrepl"
          jdk_version: openjdk11
          lein_test_command: lein with-profile -user,-dev,+ci,+refactor-nrepl do clean, test
          <<: *test_code_filters
      - test_code:
          name: "JDK 11 excluding refactor-nrepl"
          jdk_version: openjdk11
          lein_test_command: lein with-profile -user,-dev,+ci do clean, test
          <<: *test_code_filters
      - deploy:
          context: JFrog
          requires:
            - "JDK 8, with an old clojurescript dependency on the classpath"
            - "JDK 8 including refactor-nrepl"
            - "JDK 8 excluding refactor-nrepl"
            - "JDK 11 including refactor-nrepl"
            - "JDK 11 excluding refactor-nrepl"
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+(-alpha\d+)?$/
